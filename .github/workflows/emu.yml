# This file describes the GitHub Actions workflow for continuous integration of XS Core.
name: EMU Test

on:
  push:
    branches: [ master, southlake ]
  pull_request:
    branches: [ master ]

jobs:
  generate-verilog:
    runs-on: bosc
    continue-on-error: false
    name: Generate Verilog
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          export HEAD_SHA=${{ github.run_number }}
          echo "NEMU_HOME=/nfs/home/share/ci-workloads/NEMU" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/ci-runner/xs-wave/${HEAD_SHA}" >> $GITHUB_ENV
          mkdir -p /nfs/home/ci-runner/xs-wave/${HEAD_SHA}
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
      - name: generate verilog file
        run:
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --generate
      - name: check verilog
        run:
          python3 $GITHUB_WORKSPACE/.github/workflows/check_verilog.py build/XSTop.v
      - name: release
        run:
          tar -czf $WAVE_HOME/release-${HEAD_SHA}.tar.gz XSTop-Release*

jobs:
  default-emu:
    runs-on: bosc
    continue-on-error: false
    name: Test Minimal-EMU
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          export HEAD_SHA=${{ github.run_number }}
          echo "NEMU_HOME=/nfs/home/share/ci-workloads/NEMU" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/ci-runner/xs-wave/${HEAD_SHA}" >> $GITHUB_ENV
          mkdir -p /nfs/home/ci-runner/xs-wave/${HEAD_SHA}
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
      - name: Build Minimal-EMU
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --build \
            --threads 4 --config MinimalConfig
      - name: EMU - CoreMark
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --wave-dump $WAVE_HOME --threads 4 --numa --ci coremark 2> perf.log
          cat perf.log | sort
      - name: EMU - microbench
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --wave-dump $WAVE_HOME --threads 4 --numa --ci microbench 2> perf.log
          cat perf.log | sort
      - name: EMU - Linux
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --wave-dump $WAVE_HOME --threads 4 --numa --ci linux-hello 2> perf.log
          cat perf.log | sort


jobs:
  release-emu:
    runs-on: bosc
    continue-on-error: false
    name: Test Release Default-EMU
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          export HEAD_SHA=${{ github.run_number }}
          echo "NEMU_HOME=/nfs/home/share/ci-workloads/NEMU" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/ci-runner/xs-wave/${HEAD_SHA}" >> $GITHUB_ENV
          mkdir -p /nfs/home/ci-runner/xs-wave/${HEAD_SHA}
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
      - name: Build Release Default-EMU
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --build \
            --threads 8 --release
      - name: EMU - Linux
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --wave-dump $WAVE_HOME --threads 8 --numa --ci linux-hello 2> perf.log
          cat perf.log | sort
